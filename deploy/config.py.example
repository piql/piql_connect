## PiqlConnect build config file
# This file contains the configuration variables needed to set up PiqlConnect.
#
# Usage: Change the variables in this file to match the environment you are setting up.
# Rename the file to config.py before you run the build.py script.

# The full path to the folder where PiqlConnect resides
piqlconnect_root_dir = '/home/piqlconnect/src/piql_connect/'

# This setting will allow the update of Archivematicas service callbacks.
# These callbaks are needed for Archivematica to notify PiqlConnect of the
# creation of new AIPs and DIPs. In almost all cases, this should be set to True.
# Check the readme.MD file for more important information about first-time setup
# of these callbacks.
update_AM_service_callbacks = True

# If you are running PiqlConnect in development mode, set this to True. This will
# set PiqlConnect to use HTTP instead of HTTPS.
dev_environment = True

# The FQDN of the host server running PiqlConnect.
hostname = '** SERVER FQDN **'

# The UUID of the folder used for data exchange with Archivematica. This UUID can
# be found in the Archivematica Storage Service console. Check readme.MD for more
# information.
storage_location_ID = '** AM TRANSFER STORAGE LOCATION **'

# The credentials for the PiqlConnect MariaDB database.
connect_db_username = '** CONNECT DATABASE USER **'
connect_db_password = '** CONNECT DATABASE PASSWORD **'

# The credentials for the MongoDB database used to store dashboard statistics.
mongo_db_username = '** MONGODB USER **'
mongo_db_password = '** MONGODB PASSWORD **'

# S3 storage configuration. These settings are provided by your storage vendor.
S3_access_key = '** S3 ACCESS KEY **'
S3_secret_key = '** S3 SECRET KEY **'
S3_region = ''
S3_bucket_name = 'S3 BUCKET NAME'
S3_URL = '** S3 SERVER URL **'

# PiqlConnect authentication settings.
keycloak_realm_public_key = '** KEYCLOAK REALM PUBLIC KEY **'
keycloak_realm_name = '** KEYCLOAK REALM NAME **'
keycloak_callback_client_secret = '** KEYCLOAK CALLBACK CLIENT SECRET **'

# This setting will wipe the PiqlConnect database, effectively a "factory reset" of the system.
# WARNING: Setting this value to True will delete all data in the database. This action can only 
# be reversed by performing a restore of the database from backup. 
# Usually this setting should be True the first time you are setting up the system, then changed 
# to false for subsequent updates.
# Proceed with caution.
complete_database_wipe = False

# The database seeder will add initial data to the database that is nessesary for PiqlConnect to function.
# The default seeder will add a single archive containing a single holding, and is a good starting point
# for a new instance of PiqlConnect. Additional archives and holdings can be added from the UI.
# If you have a complex setup the requires a structure that will be too time-consuming to manually create
# in the UI you can create a custom seeder set that will acheive this for you. In this case set this 
# value to the name of the main database seeder file. It is recommended that you create a new set and
# not change the existing default seeder.
# NOTE: The seeder will only be run if complete_database_wipe is set to True. 
database_seeder = 'DatabaseSeeder'

# This setting must be set to True in order for the build process to run. The default value is 
# False.
config_OK = False
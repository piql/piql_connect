version: '3.6'
services:
  app:
    build:
      network: host
      context: ./
      dockerfile: ./app/Dockerfile
    volumes:
      - ".././:/var/www"
      - "~/.am:/var/www/storage/am"
    user: ${HOST_USERID}:${HOST_GROUPID}
    links:
      - database
      - cache
    environment:
      - "DB_PORT=3306"
      - "DB_HOST=database"
      - "REDIS_PORT=6379"
      - "REDIS_HOST=cache"
    networks:
      - piqlConnect-net
           
  nginx:
    image:  nginx
    restart: unless-stopped
    tty: true
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ../public:/var/www/public
      - ./../storage:/var/www/storage
      - ./../storage:/var/www/public/storage
      - ./nginx/conf.d/:/etc/nginx/conf.d/
      - ./nginx/ssl/:/etc/nginx/ssl/
    links:
      - app
    networks:
      - piqlConnect-net

  database:
    image: mariadb
    user: root
    environment:
      - "MYSQL_ROOT_PASSWORD=secret"
      - "MYSQL_DATABASE=connect"
      - "MYSQL_USER=connectdbuser"
      - "MYSQL_PASSWORD=AeJua4le"
    ports:
      - "3306:3306"
    volumes:
      - piqlConnect-mariadb:/var/lib/mysql
    networks:
      - piqlConnect-net
    command: mysqld --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci --innodb-flush-log-at-trx-commit=0

  cache:
    image: redis
    ports:
      - "63791:6379"
    networks:
      - piqlConnect-net

  composer:
    user: ${HOST_USERID}:${HOST_GROUPID}
    image: composer
    command: bash -c "composer install && composer dump-autoload"
    stdin_open: true
    tty: true
    user: ${HOST_USERID}:${HOST_GROUPID}
    volumes:
      - .././:/app
 
  npm:
    build:
      network: host
      context: ./
      dockerfile: ./node/Dockerfile
    stdin_open: true
    tty: true
    user: ${HOST_USERID}:${HOST_GROUPID}
    volumes:
      - .././:/app
 
networks:
  piqlConnect-net:
    driver: bridge

volumes:
  piqlConnect-mariadb:
    external: true
